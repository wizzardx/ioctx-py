[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ioctx"
version = "0.1.0"
description = "A structured effects system for testable side effects in Python"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"

readme = "README.md"
repository = "https://github.com/username/ioctx-py"
documentation = "https://github.com/username/ioctx-py"
keywords = ["io", "testing", "mocking", "effects", "side-effects"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Mocking",
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
typing-extensions = ">=4.0.0"
requests = {version = ">=2.25.0", optional = true}

[tool.poetry.dev-dependencies]
pytest = ">=6.0.0"
pytest-cov = ">=2.12.0"
black = ">=21.5b2"
isort = ">=5.9.0"
mypy = ">=0.900"
flake8 = ">=3.9.0"

[tool.poetry.extras]
requests = ["requests"]

[tool.poetry.group.dev.dependencies]
pytest-cov = "^6.1.1"
types-requests = "^2.32.0.20250328"

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=ioctx --cov-report=xml --cov-report=term-missing"

[tool.coverage.run]
source = ["ioctx"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
